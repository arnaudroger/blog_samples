# {method} {0x000000010d78dbd0} 'testClone' '()Lcom/github/arnaudroger/ObjectCopyVsClone$Object32Clonable;' in 'com/github/arnaudroger/ObjectCopyVsClone'
#           [sp+0x30]  (sp of caller)
[Entry Point]
0x000000010fcc8b60: mov 0x8(%rsi),%r10d
0x000000010fcc8b64: shl $0x3,%r10
0x000000010fcc8b68: cmp %r10,%rax
0x000000010fcc8b6b: jne 0x000000010fb32e20  ;   {runtime_call}
0x000000010fcc8b71: data32 xchg %ax,%ax
0x000000010fcc8b74: nopl 0x0(%rax,%rax,1)
0x000000010fcc8b7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
0x000000010fcc8b80: mov %eax,-0x14000(%rsp)
0x000000010fcc8b87: push %rbp
0x000000010fcc8b88: sub $0x20,%rsp  ;*synchronization entry
                                    ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark::testClone@-1 (line 90)
0x000000010fcc8b8c: mov 0xc(%rsi),%r8d  ;*getfield original
                                        ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark::testClone@1 (line 90)
0x000000010fcc8b90: test %r8d,%r8d
0x000000010fcc8b93: je L0002  ;*invokespecial clone
                              ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark$Object32Clonable::clone@1 (line 201)
                              ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark::testClone@4 (line 90)
0x000000010fcc8b99: lea (%r12,%r8,8),%rbp  ;*getfield original
                                           ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark::testClone@1 (line 90)
0x000000010fcc8b9d: mov 0x60(%r15),%rbx
0x000000010fcc8ba1: mov %rbx,%r10
0x000000010fcc8ba4: add $0x90,%r10
0x000000010fcc8bab: cmp 0x70(%r15),%r10
0x000000010fcc8baf: jae L0001
0x000000010fcc8bb1: mov %r10,0x60(%r15)
0x000000010fcc8bb5: prefetchnta 0xc0(%r10)
0x000000010fcc8bbd: mov $0xf8015eab,%r11d  ;   {metadata('com/github/arnaudroger/ObjectCopyVsClone$Object32Clonable')}
0x000000010fcc8bc3: movabs $0x0,%r10
0x000000010fcc8bcd: lea (%r10,%r11,8),%r10
0x000000010fcc8bd1: mov 0xa8(%r10),%r10
0x000000010fcc8bd8: mov %r10,(%rbx)
0x000000010fcc8bdb: movl $0xf8015eab,0x8(%rbx)  ;   {metadata('com/github/arnaudroger/ObjectCopyVsClone$Object32Clonable')}
             L0000: lea 0x8(%r12,%r8,8),%rdi
0x000000010fcc8be7: mov %rbx,%rsi
0x000000010fcc8bea: add $0x8,%rsi
0x000000010fcc8bee: mov $0x11,%edx
0x000000010fcc8bf3: movabs $0x10fb3f780,%r10
0x000000010fcc8bfd: callq *%r10  ;*invokespecial clone
                                 ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark$Object32Clonable::clone@1 (line 201)
                                 ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark::testClone@4 (line 90)
0x000000010fcc8c00: mov %rbx,%rax
0x000000010fcc8c03: add $0x20,%rsp
0x000000010fcc8c07: pop %rbp
0x000000010fcc8c08: test %eax,-0x63d8c0e(%rip)  # 0x00000001098f0000
                                                ;   {poll_return} *** SAFEPOINT POLL ***
0x000000010fcc8c0e: retq
             L0001: mov %r8d,(%rsp)
0x000000010fcc8c13: movabs $0x7c00af558,%rsi  ;   {metadata('com/github/arnaudroger/ObjectCopyVsClone$Object32Clonable')}
0x000000010fcc8c1d: xchg %ax,%ax
0x000000010fcc8c1f: callq 0x000000010fbedda0  ; OopMap{rbp=Oop [0]=NarrowOop off=196}
                                              ;*invokespecial clone
                                              ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark$Object32Clonable::clone@1 (line 201)
                                              ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark::testClone@4 (line 90)
                                              ;   {runtime_call}
0x000000010fcc8c24: mov (%rsp),%r8d
0x000000010fcc8c28: mov %rax,%rbx
0x000000010fcc8c2b: jmp L0000
             L0002: mov $0xfffffff6,%esi
0x000000010fcc8c32: nop
0x000000010fcc8c33: callq 0x000000010faf21a0  ; OopMap{off=216}
                                              ;*invokevirtual clone
                                              ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark::testClone@4 (line 90)
                                              ;   {runtime_call}
0x000000010fcc8c38: callq 0x000000010ae85c18  ;*invokespecial clone
                                              ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark$Object32Clonable::clone@1 (line 201)
                                              ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark::testClone@4 (line 90)
                                              ;   {runtime_call}
0x000000010fcc8c3d: mov $0xffffffa7,%esi
0x000000010fcc8c42: mov (%rsp),%ebp
0x000000010fcc8c45: xchg %ax,%ax
0x000000010fcc8c47: callq 0x000000010faf21a0  ; OopMap{rbp=NarrowOop off=236}
                                              ;*invokespecial clone
                                              ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark$Object32Clonable::clone@1 (line 201)
                                              ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark::testClone@4 (line 90)
                                              ;   {runtime_call}
0x000000010fcc8c4c: callq 0x000000010ae85c18  ;*invokespecial clone
                                              ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark$Object32Clonable::clone@1 (line 201)
                                              ; - com.github.arnaudroger.Object32CopyVsCloneBenchmark::testClone@4 (line 90)
                                              ;   {runtime_call}
0x000000010fcc8c51: hlt
0x000000010fcc8c52: hlt
0x000000010fcc8c53: hlt
0x000000010fcc8c54: hlt
0x000000010fcc8c55: hlt
0x000000010fcc8c56: hlt
0x000000010fcc8c57: hlt
0x000000010fcc8c58: hlt
0x000000010fcc8c59: hlt
0x000000010fcc8c5a: hlt
0x000000010fcc8c5b: hlt
0x000000010fcc8c5c: hlt
0x000000010fcc8c5d: hlt
0x000000010fcc8c5e: hlt
0x000000010fcc8c5f: hlt
[Exception Handler]
[Stub Code]
0x000000010fcc8c60: jmpq 0x000000010fb59760  ;   {no_reloc}
[Deopt Handler Code]
0x000000010fcc8c65: callq 0x000000010fcc8c6a
0x000000010fcc8c6a: subq $0x5,(%rsp)
0x000000010fcc8c6f: jmpq 0x000000010fb343c0  ;   {runtime_call}
0x000000010fcc8c74: hlt
0x000000010fcc8c75: hlt
0x000000010fcc8c76: hlt
0x000000010fcc8c77: hlt
