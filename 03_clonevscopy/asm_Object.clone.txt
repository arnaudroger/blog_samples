# {method} {0x000000010d2b9778} 'clone' '()Ljava/lang/Object;' in 'java/lang/Object'
#           [sp+0x50]  (sp of caller)
[Entry Point]
0x000000010fc2b080: mov 0x8(%rsi),%r10d
0x000000010fc2b084: shl $0x3,%r10
0x000000010fc2b088: cmp %r10,%rax
0x000000010fc2b08b: je L0000
0x000000010fc2b091: jmpq 0x000000010fb32e20  ;   {runtime_call}
0x000000010fc2b096: xchg %ax,%ax
[Verified Entry Point]
             L0000: mov %eax,-0x14000(%rsp)
0x000000010fc2b09f: push %rbp
0x000000010fc2b0a0: mov %rsp,%rbp
0x000000010fc2b0a3: sub $0x40,%rsp
0x000000010fc2b0a7: mov %rsi,(%rsp)
0x000000010fc2b0ab: cmp $0x0,%rsi
0x000000010fc2b0af: lea (%rsp),%rsi
0x000000010fc2b0b3: cmove (%rsp),%rsi  ; OopMap{[0]=Oop off=56}
0x000000010fc2b0b8: movabs $0x10fc2b0b8,%r10  ;   {section_word}
0x000000010fc2b0c2: mov %r10,0x1e0(%r15)
0x000000010fc2b0c9: mov %rsp,0x1d8(%r15)
0x000000010fc2b0d0: cmpb $0x0,-0x4943e0d(%rip)  # 0x000000010b2e72ca
                                                ;   {external_word}
0x000000010fc2b0d7: je L0003
0x000000010fc2b0dd: push %rsi
0x000000010fc2b0de: movabs $0x10d2b9778,%rsi  ;   {metadata({method} {0x000000010d2b9778} 'clone' '()Ljava/lang/Object;' in 'java/lang/Object')}
0x000000010fc2b0e8: mov %r15,%rdi
0x000000010fc2b0eb: test $0xf,%esp
0x000000010fc2b0f1: je L0001
0x000000010fc2b0f7: sub $0x8,%rsp
0x000000010fc2b0fb: callq 0x000000010aee7724  ;   {runtime_call}
0x000000010fc2b100: add $0x8,%rsp
0x000000010fc2b104: jmpq L0002
             L0001: callq 0x000000010aee7724  ;   {runtime_call}
             L0002: pop %rsi
             L0003: lea 0x1f8(%r15),%rdi
0x000000010fc2b116: movl $0x4,0x270(%r15)
0x000000010fc2b121: callq 0x000000010ad4ef07  ;   {runtime_call}
0x000000010fc2b126: vzeroupper
0x000000010fc2b129: movl $0x5,0x270(%r15)
0x000000010fc2b134: lock addl $0x0,(%rsp)
0x000000010fc2b139: cmpl $0x0,-0x49394e3(%rip)  # 0x000000010b2f1c60
                                                ;   {external_word}
0x000000010fc2b143: jne L0004
0x000000010fc2b149: cmpl $0x0,0x30(%r15)
0x000000010fc2b151: je L0005
             L0004: mov %rax,-0x8(%rbp)
0x000000010fc2b15b: mov %r15,%rdi
0x000000010fc2b15e: mov %rsp,%r12
0x000000010fc2b161: sub $0x0,%rsp
0x000000010fc2b165: and $0xfffffffffffffff0,%rsp
0x000000010fc2b169: callq 0x000000010af69dc0  ;   {runtime_call}
0x000000010fc2b16e: mov %r12,%rsp
0x000000010fc2b171: xor %r12,%r12
0x000000010fc2b174: mov -0x8(%rbp),%rax
             L0005: movl $0x8,0x270(%r15)
0x000000010fc2b183: cmpl $0x1,0x29c(%r15)
0x000000010fc2b18e: je L000c
             L0006: cmpb $0x0,-0x4943ed1(%rip)  # 0x000000010b2e72ca
                                                ;   {external_word}
0x000000010fc2b19b: je L0009
0x000000010fc2b1a1: mov %rax,-0x8(%rbp)
0x000000010fc2b1a5: movabs $0x10d2b9778,%rsi  ;   {metadata({method} {0x000000010d2b9778} 'clone' '()Ljava/lang/Object;' in 'java/lang/Object')}
0x000000010fc2b1af: mov %r15,%rdi
0x000000010fc2b1b2: test $0xf,%esp
0x000000010fc2b1b8: je L0007
0x000000010fc2b1be: sub $0x8,%rsp
0x000000010fc2b1c2: callq 0x000000010aee7696  ;   {runtime_call}
0x000000010fc2b1c7: add $0x8,%rsp
0x000000010fc2b1cb: jmpq L0008
             L0007: callq 0x000000010aee7696  ;   {runtime_call}
             L0008: mov -0x8(%rbp),%rax
             L0009: movabs $0x0,%r10
0x000000010fc2b1e3: mov %r10,0x1d8(%r15)
0x000000010fc2b1ea: movabs $0x0,%r10
0x000000010fc2b1f4: mov %r10,0x1e0(%r15)
0x000000010fc2b1fb: test %rax,%rax
0x000000010fc2b1fe: je L000a
0x000000010fc2b204: mov (%rax),%rax
             L000a: mov 0x38(%r15),%rcx
0x000000010fc2b20b: movl $0x0,0x100(%rcx)
0x000000010fc2b215: leaveq
0x000000010fc2b216: cmpq $0x0,0x8(%r15)
0x000000010fc2b21e: jne L000b
0x000000010fc2b224: retq
             L000b: jmpq Stub::forward exception  ;   {runtime_call}
             L000c: mov %rax,-0x8(%rbp)
0x000000010fc2b22e: mov %rsp,%r12
0x000000010fc2b231: sub $0x0,%rsp
0x000000010fc2b235: and $0xfffffffffffffff0,%rsp
0x000000010fc2b239: callq 0x000000010aee54fc  ;   {runtime_call}
0x000000010fc2b23e: mov %r12,%rsp
0x000000010fc2b241: xor %r12,%r12
0x000000010fc2b244: mov -0x8(%rbp),%rax
0x000000010fc2b248: jmpq L0006
0x000000010fc2b24d: hlt
0x000000010fc2b24e: hlt
0x000000010fc2b24f: hlt
